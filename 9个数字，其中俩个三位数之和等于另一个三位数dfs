
#include <iostream>
#include <cstring>
#include <algorithm>
#include <map>
#include <queue>
#include <vector>
#include <cmath>
#include <set>
int arr[15] = { 0 };
int used[15] = { 0 };
int n;
//实际就是求排列，前三个数的排列加上中三个数的排列等于末尾三个数的排列
using namespace std;
#define int long long
void dfs(int step) {//step是从0开始的，所以当等于n的时候已经超了
    if (step == 9) {
        int first = arr[0] * 100 + arr[1] * 10 + arr[2];
        int second= arr[3] * 100 + arr[4] * 10 + arr[5];
        int third = arr[6] * 100 + arr[7] * 10 + arr[8];
        if ((first + second) == third) {
            cout << first << "+" << second << "=" << third;
            cout << endl;
        }
        return;
    }
    for (int i = 1; i <= 9; i++) {
        if (used[i] != 1) {
            arr[step] = i;//表示当前位置可以填充这个数字
            used[i] = 1;
            dfs(step + 1);
            used[i] = 0;//进行回溯
        }
    }
}
signed main()
{
    dfs(0);
    return 0;
}
