

class Solution {

public:

uint32_t reverseBits(uint32_t n) {

uint32_t rev = 0;  

for (int i = 0; i < 32 && n > 0; ++i) {

rev |= (n & 1) << (31 - i); 

n >>= 1;

}

return rev;

}



};
class Solution {
public:
    int hammingWeight(uint32_t n) {
        int count=0;
        int number=0;
        for(int i=0;i<32&&n>0;i++){
            number=n&1;
            if(number==1){
                count++;
            }
            n>>=1;
        }
        return count;
    }
};
